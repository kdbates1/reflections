What happens when you initialize a repository? Why do you need to do it?
It creates a new respositoiry structor in the current directory. You need to do that to store your files for a particular project. The connits will based on the new repository data.

How is the staging area different from the working directory and the repository? What value do you think it offers?
The staging area stores the changes you have staged. The working directory are the files that are currenlty being worked. The value i think this adds is that it allows you to stage test files before actually committing them to the repository.

How can you use the staging area to make sure you have one commit per logical change?
You can git diff which will compare the working directory with the staging area.

What are some situations when branches would be helpful in keeping your history organized? How would branches help?
When multiple programmers are using the same master repoistory. Seperate branches would keep the files organized.

What is the result of merging two branches together? Why do we represent it in the diagram the way we do?
The result is one new branch with changes from both of the branches. A diagram helps with a visual to show everything that will be icluded in the merge.

What are the pros and cons of GitÎéÎ÷s automatic merging vs. always doing merges manually?
Pro - less work, easier
Con - conflicts 
